// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: shardman/service_shardman.proto

package shardman

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_shardman_service_shardman_proto protoreflect.FileDescriptor

var file_shardman_service_shardman_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x6d, 0x61, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x6d, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x6d, 0x61, 0x6e, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x6d, 0x61, 0x6e, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x28, 0x73, 0x68, 0x61, 0x72, 0x64, 0x6d, 0x61, 0x6e, 0x2f, 0x72, 0x70, 0x63,
	0x5f, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x73, 0x68,
	0x61, 0x72, 0x64, 0x6d, 0x61, 0x6e, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75,
	0x70, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f,
	0x70, 0x61, 0x69, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x6d, 0x61, 0x6e, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x73, 0x68, 0x61, 0x72, 0x64, 0x6d, 0x61, 0x6e, 0x2f, 0x72, 0x70,
	0x63, 0x5f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xe6, 0x08,
	0x0a, 0x16, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xbe, 0x01, 0x0a, 0x12, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x12,
	0x23, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x6d, 0x61, 0x6e, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x6d, 0x61, 0x6e, 0x2e,
	0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5d, 0x92, 0x41, 0x3c, 0x12,
	0x14, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x20,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x1a, 0x24, 0x55, 0x73, 0x65, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20,
	0x41, 0x50, 0x49, 0x20, 0x74, 0x6f, 0x20, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x20, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x20, 0x73, 0x68, 0x61, 0x72, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73,
	0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0xc4, 0x01, 0x0a, 0x13, 0x49, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x12, 0x24, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x6d, 0x61, 0x6e, 0x2e, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x6d,
	0x61, 0x6e, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x60,
	0x92, 0x41, 0x3e, 0x12, 0x15, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x20, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x20, 0x73, 0x68, 0x61, 0x72, 0x64, 0x1a, 0x25, 0x55, 0x73, 0x65, 0x20,
	0x74, 0x68, 0x69, 0x73, 0x20, 0x41, 0x50, 0x49, 0x20, 0x74, 0x6f, 0x20, 0x69, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x20, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x20, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73,
	0x12, 0xf5, 0x01, 0x0a, 0x16, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x50, 0x61, 0x69, 0x72, 0x12, 0x27, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x64, 0x6d, 0x61, 0x6e, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x6d, 0x61, 0x6e, 0x2e,
	0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x87,
	0x01, 0x92, 0x41, 0x5a, 0x12, 0x16, 0x47, 0x65, 0x74, 0x20, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x20, 0x53, 0x68, 0x61, 0x72, 0x64, 0x20, 0x50, 0x61, 0x69, 0x72, 0x1a, 0x40, 0x55, 0x73,
	0x65, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x41, 0x50, 0x49, 0x20, 0x74, 0x6f, 0x20, 0x6c, 0x6f,
	0x6f, 0x6b, 0x20, 0x75, 0x70, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x20, 0x73, 0x68,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x20, 0x50, 0x61, 0x69, 0x72, 0x20, 0x62, 0x79, 0x20, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x20, 0x50, 0x61, 0x69, 0x72, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61,
	0x72, 0x64, 0x73, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x6c, 0x6f, 0x6f,
	0x6b, 0x75, 0x70, 0x2d, 0x70, 0x61, 0x69, 0x72, 0x12, 0xde, 0x01, 0x0a, 0x12, 0x4c, 0x6f, 0x6f,
	0x6b, 0x75, 0x70, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x12,
	0x23, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x6d, 0x61, 0x6e, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75,
	0x70, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x6d, 0x61, 0x6e, 0x2e,
	0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7d, 0x92, 0x41, 0x4b, 0x12,
	0x11, 0x47, 0x65, 0x74, 0x20, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x20, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x1a, 0x36, 0x55, 0x73, 0x65, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x41, 0x50, 0x49,
	0x20, 0x74, 0x6f, 0x20, 0x6c, 0x6f, 0x6f, 0x6b, 0x20, 0x75, 0x70, 0x20, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x20, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x20, 0x62, 0x79, 0x20,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29,
	0x12, 0x27, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x2f, 0x7b, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xea, 0x01, 0x0a, 0x13, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x12, 0x24, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x6d, 0x61, 0x6e, 0x2e, 0x4c, 0x6f, 0x6f,
	0x6b, 0x75, 0x70, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x6d,
	0x61, 0x6e, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x85,
	0x01, 0x92, 0x41, 0x50, 0x12, 0x12, 0x47, 0x65, 0x74, 0x20, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x20, 0x53, 0x68, 0x61, 0x72, 0x64, 0x1a, 0x3a, 0x55, 0x73, 0x65, 0x20, 0x74, 0x68,
	0x69, 0x73, 0x20, 0x41, 0x50, 0x49, 0x20, 0x74, 0x6f, 0x20, 0x6c, 0x6f, 0x6f, 0x6b, 0x20, 0x75,
	0x70, 0x20, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x74, 0x65, 0x72, 0x20, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x64, 0x20, 0x62, 0x79, 0x20, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x72, 0x69, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73,
	0x2f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x2f, 0x7b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x72, 0x69, 0x64, 0x7d, 0x42, 0x86, 0x01, 0x92, 0x41, 0x55, 0x12, 0x53, 0x0a, 0x0c,
	0x43, 0x6f, 0x72, 0x65, 0x20, 0x42, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x22, 0x3e, 0x0a, 0x0d,
	0x4e, 0x67, 0x75, 0x79, 0x65, 0x6e, 0x20, 0x56, 0x61, 0x6e, 0x20, 0x54, 0x75, 0x12, 0x18, 0x68,
	0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x74, 0x75, 0x6e, 0x76, 0x78, 0x1a, 0x13, 0x74, 0x75, 0x6e, 0x76, 0x2e, 0x74, 0x6f,
	0x64, 0x6f, 0x40, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x32, 0x03, 0x31, 0x2e,
	0x31, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x75,
	0x6e, 0x76, 0x78, 0x2f, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2f, 0x67,
	0x72, 0x70, 0x63, 0x2f, 0x70, 0x62, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x6d, 0x61, 0x6e, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_shardman_service_shardman_proto_goTypes = []any{
	(*InsertAccountShardRequest)(nil),      // 0: shardman.InsertAccountShardRequest
	(*InsertCustomerShardRequest)(nil),     // 1: shardman.InsertCustomerShardRequest
	(*LookupAccountShardPairRequest)(nil),  // 2: shardman.LookupAccountShardPairRequest
	(*LookupAccountShardRequest)(nil),      // 3: shardman.LookupAccountShardRequest
	(*LookupCustomerShardRequest)(nil),     // 4: shardman.LookupCustomerShardRequest
	(*InsertAccountShardResponse)(nil),     // 5: shardman.InsertAccountShardResponse
	(*InsertCustomerShardResponse)(nil),    // 6: shardman.InsertCustomerShardResponse
	(*LookupAccountShardPairResponse)(nil), // 7: shardman.LookupAccountShardPairResponse
	(*LookupAccountShardResponse)(nil),     // 8: shardman.LookupAccountShardResponse
	(*LookupCustomerShardResponse)(nil),    // 9: shardman.LookupCustomerShardResponse
}
var file_shardman_service_shardman_proto_depIdxs = []int32{
	0, // 0: shardman.ShardManagementService.InsertAccountShard:input_type -> shardman.InsertAccountShardRequest
	1, // 1: shardman.ShardManagementService.InsertCustomerShard:input_type -> shardman.InsertCustomerShardRequest
	2, // 2: shardman.ShardManagementService.LookupAccountShardPair:input_type -> shardman.LookupAccountShardPairRequest
	3, // 3: shardman.ShardManagementService.LookupAccountShard:input_type -> shardman.LookupAccountShardRequest
	4, // 4: shardman.ShardManagementService.LookupCustomerShard:input_type -> shardman.LookupCustomerShardRequest
	5, // 5: shardman.ShardManagementService.InsertAccountShard:output_type -> shardman.InsertAccountShardResponse
	6, // 6: shardman.ShardManagementService.InsertCustomerShard:output_type -> shardman.InsertCustomerShardResponse
	7, // 7: shardman.ShardManagementService.LookupAccountShardPair:output_type -> shardman.LookupAccountShardPairResponse
	8, // 8: shardman.ShardManagementService.LookupAccountShard:output_type -> shardman.LookupAccountShardResponse
	9, // 9: shardman.ShardManagementService.LookupCustomerShard:output_type -> shardman.LookupCustomerShardResponse
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_shardman_service_shardman_proto_init() }
func file_shardman_service_shardman_proto_init() {
	if File_shardman_service_shardman_proto != nil {
		return
	}
	file_shardman_rpc_insert_account_shard_proto_init()
	file_shardman_rpc_insert_customer_shard_proto_init()
	file_shardman_rpc_lookup_account_shard_pair_proto_init()
	file_shardman_rpc_lookup_account_shard_proto_init()
	file_shardman_rpc_lookup_customer_shard_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shardman_service_shardman_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_shardman_service_shardman_proto_goTypes,
		DependencyIndexes: file_shardman_service_shardman_proto_depIdxs,
	}.Build()
	File_shardman_service_shardman_proto = out.File
	file_shardman_service_shardman_proto_rawDesc = nil
	file_shardman_service_shardman_proto_goTypes = nil
	file_shardman_service_shardman_proto_depIdxs = nil
}
