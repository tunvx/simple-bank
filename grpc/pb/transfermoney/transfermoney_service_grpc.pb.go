// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.27.3
// source: transfermoney/transfermoney_service.proto

package transfermoney

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	TransfermoneyService_CheckAccount_FullMethodName                             = "/transfermoney.TransfermoneyService/CheckAccount"
	TransfermoneyService_FastInternalTransfer_FullMethodName                     = "/transfermoney.TransfermoneyService/FastInternalTransfer"
	TransfermoneyService_TestGetEmpty_FullMethodName                             = "/transfermoney.TransfermoneyService/TestGetEmpty"
	TransfermoneyService_TestPostEmpty_FullMethodName                            = "/transfermoney.TransfermoneyService/TestPostEmpty"
	TransfermoneyService_TestCheckAccountWithNoProcessing_FullMethodName         = "/transfermoney.TransfermoneyService/TestCheckAccountWithNoProcessing"
	TransfermoneyService_TestFastInternalTransferWithNoProcessing_FullMethodName = "/transfermoney.TransfermoneyService/TestFastInternalTransferWithNoProcessing"
	TransfermoneyService_TestCheckAccountJustProcessAuth_FullMethodName          = "/transfermoney.TransfermoneyService/TestCheckAccountJustProcessAuth"
	TransfermoneyService_TestFastInternalTransferJustProcessAuth_FullMethodName  = "/transfermoney.TransfermoneyService/TestFastInternalTransferJustProcessAuth"
)

// TransfermoneyServiceClient is the client API for TransfermoneyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type TransfermoneyServiceClient interface {
	CheckAccount(ctx context.Context, in *CheckAccountRequest, opts ...grpc.CallOption) (*CheckAccountResponse, error)
	FastInternalTransfer(ctx context.Context, in *FastInternalTransferRequest, opts ...grpc.CallOption) (*FastInternalTransferResponse, error)
	// ==================================================================================================================
	// ==================================================================================================================
	// ==================================================================================================================
	TestGetEmpty(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*OkayResponse, error)
	TestPostEmpty(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*OkayResponse, error)
	TestCheckAccountWithNoProcessing(ctx context.Context, in *CheckAccountRequest, opts ...grpc.CallOption) (*OkayResponse, error)
	TestFastInternalTransferWithNoProcessing(ctx context.Context, in *FastInternalTransferRequest, opts ...grpc.CallOption) (*OkayResponse, error)
	TestCheckAccountJustProcessAuth(ctx context.Context, in *CheckAccountRequest, opts ...grpc.CallOption) (*OkayResponse, error)
	TestFastInternalTransferJustProcessAuth(ctx context.Context, in *FastInternalTransferRequest, opts ...grpc.CallOption) (*OkayResponse, error)
}

type transfermoneyServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTransfermoneyServiceClient(cc grpc.ClientConnInterface) TransfermoneyServiceClient {
	return &transfermoneyServiceClient{cc}
}

func (c *transfermoneyServiceClient) CheckAccount(ctx context.Context, in *CheckAccountRequest, opts ...grpc.CallOption) (*CheckAccountResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CheckAccountResponse)
	err := c.cc.Invoke(ctx, TransfermoneyService_CheckAccount_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transfermoneyServiceClient) FastInternalTransfer(ctx context.Context, in *FastInternalTransferRequest, opts ...grpc.CallOption) (*FastInternalTransferResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(FastInternalTransferResponse)
	err := c.cc.Invoke(ctx, TransfermoneyService_FastInternalTransfer_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transfermoneyServiceClient) TestGetEmpty(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*OkayResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(OkayResponse)
	err := c.cc.Invoke(ctx, TransfermoneyService_TestGetEmpty_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transfermoneyServiceClient) TestPostEmpty(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*OkayResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(OkayResponse)
	err := c.cc.Invoke(ctx, TransfermoneyService_TestPostEmpty_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transfermoneyServiceClient) TestCheckAccountWithNoProcessing(ctx context.Context, in *CheckAccountRequest, opts ...grpc.CallOption) (*OkayResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(OkayResponse)
	err := c.cc.Invoke(ctx, TransfermoneyService_TestCheckAccountWithNoProcessing_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transfermoneyServiceClient) TestFastInternalTransferWithNoProcessing(ctx context.Context, in *FastInternalTransferRequest, opts ...grpc.CallOption) (*OkayResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(OkayResponse)
	err := c.cc.Invoke(ctx, TransfermoneyService_TestFastInternalTransferWithNoProcessing_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transfermoneyServiceClient) TestCheckAccountJustProcessAuth(ctx context.Context, in *CheckAccountRequest, opts ...grpc.CallOption) (*OkayResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(OkayResponse)
	err := c.cc.Invoke(ctx, TransfermoneyService_TestCheckAccountJustProcessAuth_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transfermoneyServiceClient) TestFastInternalTransferJustProcessAuth(ctx context.Context, in *FastInternalTransferRequest, opts ...grpc.CallOption) (*OkayResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(OkayResponse)
	err := c.cc.Invoke(ctx, TransfermoneyService_TestFastInternalTransferJustProcessAuth_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TransfermoneyServiceServer is the server API for TransfermoneyService service.
// All implementations must embed UnimplementedTransfermoneyServiceServer
// for forward compatibility.
type TransfermoneyServiceServer interface {
	CheckAccount(context.Context, *CheckAccountRequest) (*CheckAccountResponse, error)
	FastInternalTransfer(context.Context, *FastInternalTransferRequest) (*FastInternalTransferResponse, error)
	// ==================================================================================================================
	// ==================================================================================================================
	// ==================================================================================================================
	TestGetEmpty(context.Context, *Empty) (*OkayResponse, error)
	TestPostEmpty(context.Context, *Empty) (*OkayResponse, error)
	TestCheckAccountWithNoProcessing(context.Context, *CheckAccountRequest) (*OkayResponse, error)
	TestFastInternalTransferWithNoProcessing(context.Context, *FastInternalTransferRequest) (*OkayResponse, error)
	TestCheckAccountJustProcessAuth(context.Context, *CheckAccountRequest) (*OkayResponse, error)
	TestFastInternalTransferJustProcessAuth(context.Context, *FastInternalTransferRequest) (*OkayResponse, error)
	mustEmbedUnimplementedTransfermoneyServiceServer()
}

// UnimplementedTransfermoneyServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedTransfermoneyServiceServer struct{}

func (UnimplementedTransfermoneyServiceServer) CheckAccount(context.Context, *CheckAccountRequest) (*CheckAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckAccount not implemented")
}
func (UnimplementedTransfermoneyServiceServer) FastInternalTransfer(context.Context, *FastInternalTransferRequest) (*FastInternalTransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FastInternalTransfer not implemented")
}
func (UnimplementedTransfermoneyServiceServer) TestGetEmpty(context.Context, *Empty) (*OkayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TestGetEmpty not implemented")
}
func (UnimplementedTransfermoneyServiceServer) TestPostEmpty(context.Context, *Empty) (*OkayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TestPostEmpty not implemented")
}
func (UnimplementedTransfermoneyServiceServer) TestCheckAccountWithNoProcessing(context.Context, *CheckAccountRequest) (*OkayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TestCheckAccountWithNoProcessing not implemented")
}
func (UnimplementedTransfermoneyServiceServer) TestFastInternalTransferWithNoProcessing(context.Context, *FastInternalTransferRequest) (*OkayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TestFastInternalTransferWithNoProcessing not implemented")
}
func (UnimplementedTransfermoneyServiceServer) TestCheckAccountJustProcessAuth(context.Context, *CheckAccountRequest) (*OkayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TestCheckAccountJustProcessAuth not implemented")
}
func (UnimplementedTransfermoneyServiceServer) TestFastInternalTransferJustProcessAuth(context.Context, *FastInternalTransferRequest) (*OkayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TestFastInternalTransferJustProcessAuth not implemented")
}
func (UnimplementedTransfermoneyServiceServer) mustEmbedUnimplementedTransfermoneyServiceServer() {}
func (UnimplementedTransfermoneyServiceServer) testEmbeddedByValue()                              {}

// UnsafeTransfermoneyServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to TransfermoneyServiceServer will
// result in compilation errors.
type UnsafeTransfermoneyServiceServer interface {
	mustEmbedUnimplementedTransfermoneyServiceServer()
}

func RegisterTransfermoneyServiceServer(s grpc.ServiceRegistrar, srv TransfermoneyServiceServer) {
	// If the following call pancis, it indicates UnimplementedTransfermoneyServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&TransfermoneyService_ServiceDesc, srv)
}

func _TransfermoneyService_CheckAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransfermoneyServiceServer).CheckAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: TransfermoneyService_CheckAccount_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransfermoneyServiceServer).CheckAccount(ctx, req.(*CheckAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransfermoneyService_FastInternalTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FastInternalTransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransfermoneyServiceServer).FastInternalTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: TransfermoneyService_FastInternalTransfer_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransfermoneyServiceServer).FastInternalTransfer(ctx, req.(*FastInternalTransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransfermoneyService_TestGetEmpty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransfermoneyServiceServer).TestGetEmpty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: TransfermoneyService_TestGetEmpty_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransfermoneyServiceServer).TestGetEmpty(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransfermoneyService_TestPostEmpty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransfermoneyServiceServer).TestPostEmpty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: TransfermoneyService_TestPostEmpty_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransfermoneyServiceServer).TestPostEmpty(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransfermoneyService_TestCheckAccountWithNoProcessing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransfermoneyServiceServer).TestCheckAccountWithNoProcessing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: TransfermoneyService_TestCheckAccountWithNoProcessing_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransfermoneyServiceServer).TestCheckAccountWithNoProcessing(ctx, req.(*CheckAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransfermoneyService_TestFastInternalTransferWithNoProcessing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FastInternalTransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransfermoneyServiceServer).TestFastInternalTransferWithNoProcessing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: TransfermoneyService_TestFastInternalTransferWithNoProcessing_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransfermoneyServiceServer).TestFastInternalTransferWithNoProcessing(ctx, req.(*FastInternalTransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransfermoneyService_TestCheckAccountJustProcessAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransfermoneyServiceServer).TestCheckAccountJustProcessAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: TransfermoneyService_TestCheckAccountJustProcessAuth_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransfermoneyServiceServer).TestCheckAccountJustProcessAuth(ctx, req.(*CheckAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransfermoneyService_TestFastInternalTransferJustProcessAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FastInternalTransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransfermoneyServiceServer).TestFastInternalTransferJustProcessAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: TransfermoneyService_TestFastInternalTransferJustProcessAuth_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransfermoneyServiceServer).TestFastInternalTransferJustProcessAuth(ctx, req.(*FastInternalTransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// TransfermoneyService_ServiceDesc is the grpc.ServiceDesc for TransfermoneyService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var TransfermoneyService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "transfermoney.TransfermoneyService",
	HandlerType: (*TransfermoneyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckAccount",
			Handler:    _TransfermoneyService_CheckAccount_Handler,
		},
		{
			MethodName: "FastInternalTransfer",
			Handler:    _TransfermoneyService_FastInternalTransfer_Handler,
		},
		{
			MethodName: "TestGetEmpty",
			Handler:    _TransfermoneyService_TestGetEmpty_Handler,
		},
		{
			MethodName: "TestPostEmpty",
			Handler:    _TransfermoneyService_TestPostEmpty_Handler,
		},
		{
			MethodName: "TestCheckAccountWithNoProcessing",
			Handler:    _TransfermoneyService_TestCheckAccountWithNoProcessing_Handler,
		},
		{
			MethodName: "TestFastInternalTransferWithNoProcessing",
			Handler:    _TransfermoneyService_TestFastInternalTransferWithNoProcessing_Handler,
		},
		{
			MethodName: "TestCheckAccountJustProcessAuth",
			Handler:    _TransfermoneyService_TestCheckAccountJustProcessAuth_Handler,
		},
		{
			MethodName: "TestFastInternalTransferJustProcessAuth",
			Handler:    _TransfermoneyService_TestFastInternalTransferJustProcessAuth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transfermoney/transfermoney_service.proto",
}
