# ConfigMap for storing PostgreSQL configuration details
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres02-secret
  labels:
    app: postgres02
data:
  POSTGRES_DB: auth_db # Database name to be created
  POSTGRES_USER: postgres # User for the PostgreSQL instance
  POSTGRES_PASSWORD: secret # Password for the PostgreSQL user

---
# PersistentVolume (PV) defines the storage resource in the cluster
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres02-pv
  labels:
    type: local
    app: postgres02
spec:
  storageClassName: manual # Storage class to use for this PV
  capacity:
    storage: 50Gi # Storage capacity for the PV
  accessModes:
    - ReadWriteMany # PV access mode (can be accessed by multiple pods)
  hostPath:
    path: /data/postgres02 # Path on the host where the data is stored

---
# PersistentVolumeClaim (PVC) allows a pod to request specific storage resources
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres02-pvc
  labels:
    app: postgres02
spec:
  storageClassName: manual # Storage class to use for this PVC
  accessModes:
    - ReadWriteMany # PVC access mode (matching the PV)
  resources:
    requests:
      storage: 50Gi # Requested storage for the PVC

---
# Deployment for the PostgreSQL instance
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres02
  labels:
    app: postgres02
spec:
  replicas: 1 # Number of pod replicas
  selector:
    matchLabels:
      app: postgres02
  template:
    metadata:
      labels:
        app: postgres02
    spec:
      containers:
        - name: postgres02
          image: postgres:17.0-alpine3.20 # PostgreSQL container image
          ports:
            - containerPort: 5432 # Container port to expose
          envFrom:
            - configMapRef:
                name: postgres02-secret # Reference to ConfigMap for environment variables
          volumeMounts:
            - name: postgres02-volume
              mountPath: /var/lib/postgresql/data # Path in the container where data will be stored
          resources:
            requests:
              cpu: "1" # Requested CPU for the container
              memory: "1Gi" # Requested memory for the container
            limits:
              cpu: "1" # Limit of CPU for the container
              memory: "1Gi" # Limit of memory for the container
          # securityContext:
          #   runAsUser: 70 # The defaul 'postgres' user UID
          #   runAsGroup: 70 # The defaul 'postgres' user GID
      volumes:
        - name: postgres02-volume
          persistentVolumeClaim:
            claimName: postgres02-pvc # Claim the PVC for the deployment
      restartPolicy: Always
